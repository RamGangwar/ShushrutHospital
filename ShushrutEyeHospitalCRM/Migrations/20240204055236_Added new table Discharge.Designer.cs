// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ShushrutEyeHospitalCRM.ApplicationContext;

#nullable disable

namespace ShushrutEyeHospitalCRM.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240204055236_Added new table Discharge")]
    partial class AddednewtableDischarge
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.24")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("ShushrutEyeHospitalCRM.Models.DTO.ApplicationRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("ShushrutEyeHospitalCRM.Models.DTO.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("ShushrutEyeHospitalCRM.Models.DTO.Counsling", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DOB")
                        .HasColumnType("datetime2");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfilePic")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Counsling");
                });

            modelBuilder.Entity("ShushrutEyeHospitalCRM.Models.DTO.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Status")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("ShushrutEyeHospitalCRM.Models.DTO.Doctor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Biography")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BloodGroup")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DOB")
                        .HasColumnType("datetime2");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("Designation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfilePic")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Specialist")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("UserId");

                    b.ToTable("Doctors");
                });

            modelBuilder.Entity("ShushrutEyeHospitalCRM.Models.DTO.Patient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BloodGroup")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("ConsultancyFee")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool?>("CounselingStatus")
                        .HasColumnType("bit");

                    b.Property<int?>("CounslingId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DOB")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DoctorId")
                        .HasColumnType("int");

                    b.Property<bool?>("DoctorStatus")
                        .HasColumnType("bit");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsCounseling")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDischarged")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsRemaining")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastCheckupDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Problem")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ReceptionistId")
                        .HasColumnType("int");

                    b.Property<int>("RefractionId")
                        .HasColumnType("int");

                    b.Property<bool?>("RefractionStatus")
                        .HasColumnType("bit");

                    b.Property<bool?>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("CounslingId");

                    b.HasIndex("DoctorId");

                    b.HasIndex("ReceptionistId");

                    b.HasIndex("RefractionId");

                    b.HasIndex("UserId");

                    b.ToTable("Patients");
                });

            modelBuilder.Entity("ShushrutEyeHospitalCRM.Models.DTO.PatientAdvGlasses", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("AddLE_Axis")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddLE_Cy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddLE_NV")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddLE_Prism")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddLE_Sph")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddLE_VA")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddRE_Axis")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddRE_Cy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddRE_NV")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddRE_Prism")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddRE_Sph")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddRE_VA")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DistanceLE_Axis")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DistanceLE_Cy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DistanceLE_NV")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DistanceLE_Prism")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DistanceLE_Sph")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DistanceLE_VA")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DistanceRE_Axis")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DistanceRE_Cy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DistanceRE_NV")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DistanceRE_Prism")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DistanceRE_Sph")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DistanceRE_VA")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PatientId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("PatientAdvGlasses");
                });

            modelBuilder.Entity("ShushrutEyeHospitalCRM.Models.DTO.PatientCounseling", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("AdditionalProcedure")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AnesthesiaType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("ApproxCharge")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("BookingDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CounsellorName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Diagnosis")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DoctorName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MRNO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OperatedEye")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PackageName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PatientId")
                        .HasColumnType("int");

                    b.Property<string>("PatientOrParty")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProcedureName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Status")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("SurgeryDateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("PatientId");

                    b.ToTable("PatientCounseling");
                });

            modelBuilder.Entity("ShushrutEyeHospitalCRM.Models.DTO.PatientDischarge", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DischargeDetail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PatientId")
                        .HasColumnType("int");

                    b.Property<int?>("ReceptionistId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PatientId");

                    b.ToTable("PatientDischarge");
                });

            modelBuilder.Entity("ShushrutEyeHospitalCRM.Models.DTO.PatientExaminationDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("FindingName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LeftEye")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PatientId")
                        .HasColumnType("int");

                    b.Property<string>("RightEye")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ExaminationDetail");
                });

            modelBuilder.Entity("ShushrutEyeHospitalCRM.Models.DTO.PatientHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DistanceVisionLEWithGlass")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DistanceVisionLEWithPinhole")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DistanceVisionREWithGlass")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DistanceVisionREWithPinhole")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DoctorAdvice")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DoctorName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IOPLE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IOPRE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IOPTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MethodName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NearVisionLEWithGlass")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NearVisionLEWithPinhole")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NearVisionREWithGlass")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NearVisionREWithPinhole")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PLE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PRE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PatientId")
                        .HasColumnType("int");

                    b.Property<string>("Prescriptions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RefractionName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PatientId");

                    b.ToTable("PatientHistory");
                });

            modelBuilder.Entity("ShushrutEyeHospitalCRM.Models.DTO.Receptionist", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DOB")
                        .HasColumnType("datetime2");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfilePic")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Receptionists");
                });

            modelBuilder.Entity("ShushrutEyeHospitalCRM.Models.DTO.Refraction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DOB")
                        .HasColumnType("datetime2");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfilePic")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Refractions");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("ShushrutEyeHospitalCRM.Models.DTO.ApplicationRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("ShushrutEyeHospitalCRM.Models.DTO.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("ShushrutEyeHospitalCRM.Models.DTO.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("ShushrutEyeHospitalCRM.Models.DTO.ApplicationRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ShushrutEyeHospitalCRM.Models.DTO.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("ShushrutEyeHospitalCRM.Models.DTO.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ShushrutEyeHospitalCRM.Models.DTO.Counsling", b =>
                {
                    b.HasOne("ShushrutEyeHospitalCRM.Models.DTO.ApplicationUser", "ApplicationUser")
                        .WithMany("Counslings")
                        .HasForeignKey("UserId");

                    b.Navigation("ApplicationUser");
                });

            modelBuilder.Entity("ShushrutEyeHospitalCRM.Models.DTO.Doctor", b =>
                {
                    b.HasOne("ShushrutEyeHospitalCRM.Models.DTO.Department", "Department")
                        .WithMany("Doctors")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ShushrutEyeHospitalCRM.Models.DTO.ApplicationUser", "ApplicationUser")
                        .WithMany("Doctors")
                        .HasForeignKey("UserId");

                    b.Navigation("ApplicationUser");

                    b.Navigation("Department");
                });

            modelBuilder.Entity("ShushrutEyeHospitalCRM.Models.DTO.Patient", b =>
                {
                    b.HasOne("ShushrutEyeHospitalCRM.Models.DTO.Counsling", "Counsling")
                        .WithMany("Patient")
                        .HasForeignKey("CounslingId");

                    b.HasOne("ShushrutEyeHospitalCRM.Models.DTO.Doctor", "Doctor")
                        .WithMany("Patient")
                        .HasForeignKey("DoctorId");

                    b.HasOne("ShushrutEyeHospitalCRM.Models.DTO.Receptionist", "Receptionist")
                        .WithMany("Patient")
                        .HasForeignKey("ReceptionistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ShushrutEyeHospitalCRM.Models.DTO.Refraction", "Refraction")
                        .WithMany("Patients")
                        .HasForeignKey("RefractionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ShushrutEyeHospitalCRM.Models.DTO.ApplicationUser", "ApplicationUser")
                        .WithMany("Patients")
                        .HasForeignKey("UserId");

                    b.Navigation("ApplicationUser");

                    b.Navigation("Counsling");

                    b.Navigation("Doctor");

                    b.Navigation("Receptionist");

                    b.Navigation("Refraction");
                });

            modelBuilder.Entity("ShushrutEyeHospitalCRM.Models.DTO.PatientCounseling", b =>
                {
                    b.HasOne("ShushrutEyeHospitalCRM.Models.DTO.Patient", "Patient")
                        .WithMany()
                        .HasForeignKey("PatientId");

                    b.Navigation("Patient");
                });

            modelBuilder.Entity("ShushrutEyeHospitalCRM.Models.DTO.PatientDischarge", b =>
                {
                    b.HasOne("ShushrutEyeHospitalCRM.Models.DTO.Patient", "Patient")
                        .WithMany()
                        .HasForeignKey("PatientId");

                    b.Navigation("Patient");
                });

            modelBuilder.Entity("ShushrutEyeHospitalCRM.Models.DTO.PatientHistory", b =>
                {
                    b.HasOne("ShushrutEyeHospitalCRM.Models.DTO.Patient", "Patient")
                        .WithMany("PatientHistories")
                        .HasForeignKey("PatientId");

                    b.Navigation("Patient");
                });

            modelBuilder.Entity("ShushrutEyeHospitalCRM.Models.DTO.Receptionist", b =>
                {
                    b.HasOne("ShushrutEyeHospitalCRM.Models.DTO.ApplicationUser", "ApplicationUser")
                        .WithMany("Receptionists")
                        .HasForeignKey("UserId");

                    b.Navigation("ApplicationUser");
                });

            modelBuilder.Entity("ShushrutEyeHospitalCRM.Models.DTO.Refraction", b =>
                {
                    b.HasOne("ShushrutEyeHospitalCRM.Models.DTO.ApplicationUser", "ApplicationUser")
                        .WithMany("Refractions")
                        .HasForeignKey("UserId");

                    b.Navigation("ApplicationUser");
                });

            modelBuilder.Entity("ShushrutEyeHospitalCRM.Models.DTO.ApplicationUser", b =>
                {
                    b.Navigation("Counslings");

                    b.Navigation("Doctors");

                    b.Navigation("Patients");

                    b.Navigation("Receptionists");

                    b.Navigation("Refractions");
                });

            modelBuilder.Entity("ShushrutEyeHospitalCRM.Models.DTO.Counsling", b =>
                {
                    b.Navigation("Patient");
                });

            modelBuilder.Entity("ShushrutEyeHospitalCRM.Models.DTO.Department", b =>
                {
                    b.Navigation("Doctors");
                });

            modelBuilder.Entity("ShushrutEyeHospitalCRM.Models.DTO.Doctor", b =>
                {
                    b.Navigation("Patient");
                });

            modelBuilder.Entity("ShushrutEyeHospitalCRM.Models.DTO.Patient", b =>
                {
                    b.Navigation("PatientHistories");
                });

            modelBuilder.Entity("ShushrutEyeHospitalCRM.Models.DTO.Receptionist", b =>
                {
                    b.Navigation("Patient");
                });

            modelBuilder.Entity("ShushrutEyeHospitalCRM.Models.DTO.Refraction", b =>
                {
                    b.Navigation("Patients");
                });
#pragma warning restore 612, 618
        }
    }
}
